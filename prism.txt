<p>アイキャッチ横の文章</p>
<!--more-->


<h2>言語名</h2>

<ul class="box type-disc">
<li>language-markup</li>
<li>language-html</li>
<li>language-xml</li>
<li>language-svg</li>
<li>language-mathml</li>
<li>language-css</li>
<li>language-clike</li>
<li>language-javascript</li>
<li>language-js</li>
<li>language-docker</li>
<li>language-dockerfile</li>
<li>language-git</li>
<li>language-ini</li>
<li>language-json</li>
<li>language-markdown</li>
<li>language-md</li>
<li>language-nginx</li>
<li>language-php</li>
<li>language-plsql</li>
<li>language-powershell</li>
<li>language-sql</li>
</ul>









<h2>サンプル</h2>

<pre><code class="language-markup" data-language="markup">
◆ prism-unescaped-markup.min.js使用
&lt;html&gt;
&lt;head&gt;&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;docker compose!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>


<pre><code class="language-markup" data-language="markup">
◆ AddQuicktagプラグインでhtmlエスケープ処理
&lt;html&gt;
&lt;head&gt;&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;docker compose!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>





<pre>
<code class="language-javascript" data-language="javascript">
xxxxx
</code>
</pre>

<pre>
<code class="language-javascript" data-language="javascript">
xxxxx
</code>
</pre>



<pre>
<code class="language-javascript" data-language="javascript">
// モジュール読み込み
var gulp = require('gulp');								// gulpを呼び出す
var watch = require('gulp-watch');						// 追加ファイルも監視対象に追加する
var changed  = require('gulp-changed');					// 変更されたファイルだけを処理
var imagemin = require('gulp-imagemin');				// 画像最適化
var pngquant = require('imagemin-pngquant');			// png最適化
var mozjpeg  = require('imagemin-mozjpeg');				// jpg最適化
var jpegrec = require('imagemin-jpeg-recompress');		// jpg最適化 - macだと「imagemin-mozjpeg」がエラー起こすのでこっち使った方が良い
var imageminGif = require('imagemin-gifsicle');			// gif圧縮
var svgmin = require('gulp-svgmin');					// svg圧縮

// 処理前と処理後のディレクトリを定義
var paths = {
	srcDir : './src',						// 処理前
	dstDir : './public'						// 処理後
}

// 画像最適化
gulp.task('imagemin', function(){
	var srcGlob = paths.srcDir + '/images/**/*.+(jpg|gif)';
	var dstGlob = paths.dstDir + '/images/';

	// jpg・gif
	gulp.src(srcGlob)
		.pipe(changed(dstGlob))					// 処理前・処理後で違いのあるものをチェック
		.pipe(imagemin([
			// gif
			imageminGif({
				interlaced: false,				// 
				optimizationLevel: 3,			// 1 - 3
				colors: 100						// 2 - 256
			}),

			// jpg
			// imagemin.jpegtran({quality:85, progressive: true})	// mozjpegはmacでエラーが発生するためjpegtranを利用する（少し圧縮率が低い）
			// jpegrec({quality:'low', min:40, max:85})				// [macではこちらを有効にする] quality: low, midium, high, veryhigh
			mozjpeg({quality:85, progressive: true})				// [winではこちらを有効にする]
		]))
		.pipe(gulp.dest(dstGlob));

	// png （画像が暗くなる現象対策のためpngだけ切り出し）
	srcGlob = paths.srcDir + '/images/**/*.+(png)';
	gulp.src(srcGlob)
		.pipe(changed(dstGlob))					// 処理前・処理後で違いのあるものをチェック
		.pipe(imagemin(
			[pngquant({quality: '40-80', speed: 1})] //40-70
		))
		.pipe(imagemin()) // pngquantで圧縮した画像が暗くなる現象対策（余計なガンマ情報を削除）
		.pipe(gulp.dest(dstGlob));
});

// svg画像の圧縮タスク
// $ gulp svgmin
gulp.task('svgmin', function(){
	var srcGlob = paths.srcDir + '/images/**/*.+(svg)';
	var dstGlob = paths.dstDir + '/images/';
	gulp.src(srcGlob)
		.pipe(changed(dstGlob))
		.pipe(svgmin())
		.pipe(gulp.dest(dstGlob));
});

// 「gulp」で実行のタスク （ファイルの監視/js/sass、サーバー実行）
gulp.task('default',['imagemin','svgmin'], function() {
	// ファイルの監視をして変化があったらタスクを実行
	gulp.watch([paths.srcDir + '/images/**/*'],['imagemin','svgmin']);
	// 新規ファイルが追加されたとき
	return watch([paths.srcDir + '/images/**/*'], () => {
		return gulp.start(['imagemin','svgmin']);
	});
});
</code>
</pre>










<h2>参考</h2>
<ul class="link">
<li><a rel="nofollow" href="https://prismjs.com/">Prism</a></li>
<li><a rel="nofollow" href="https://noneet-nolife.com/blog/">暗黙知を越えて</a></li>
<li><a rel="nofollow" href="https://mndangler.net/2017/04/syntaxhighlighter_prism-js/">SyntaxHighlighterをPrism.jsに乗り換える | 魔ッドアングラー</a></li>
<li><a rel="nofollow" href="https://moewe-net.com/uncategorized/prism-js">prism.jsでソースコードをハイライト表示する | IT底辺脱却ブログ</a></li>
<li><a rel="nofollow" href="https://thk.kanzae.net/net/wordpress/t1171/">Prism.js シンタックスハイライターが素晴らしい | Thought is free</a></li>
<li><a rel="nofollow" href="https://prismjs.com/plugins/show-language/">Show Language ▲ Prism plugins</a></li>
<li><a rel="nofollow" href="https://niwaka-web.com/prism_js/">【JS】シンタックスハイライトPrism.jsの使い方 &#8211; niwaka-web</a></li>
<li><a rel="nofollow" href="https://yotarandum.net/?p=119">【prism.js】wordpressでコードを載せる時に使えるハイライト表示用js【色分けが出来る】 | 与太郎の備忘録</a></li>
<li><a rel="nofollow" href="https://codepen.io/wilbo/pen/xRVLOj">[codepen] clipboard to prism snippets</a></li>
<li><a rel="nofollow" href="https://kazunori-toybox.com/blog/js/prism-js/">シンタックスハイライター Prism JS を使用する | 打ち聞かせ</a></li>
<li><a rel="nofollow" href="https://prismjs.com/plugins/copy-to-clipboard/">Copy to Clipboard ▲ Prism plugins</a></li>
<li><a rel="nofollow" href="https://clipboardjs.com/">clipboard.js &mdash; Copy to clipboard without Flash</a></li>
</ul>














